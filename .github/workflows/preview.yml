# This is a basic workflow to help you get started with Actions

name: Deploy-preview

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
    pull_request:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2
    # store branch name in ${BRANCH_NAME}
    - uses: nelonoel/branch-name@v1
    
    - name: Extract branch name
      shell: bash
      run: echo "${GITHUB_REF}"

    - uses: actions/setup-node@v1
    - run: npm install -g gitbook-cli marked

    # Create the gitbooks in the build directory
    - name: Build gitbooks
      run: .github/bin/buildGitBooks.sh 

    - name: convert index  
      run: .github/bin/createIndex.sh

    - uses: chrnorm/deployment-action@releases/v1
      name: Create GitHub deployment
      id: deployment
      with:
        token: "${{ secrets.GITHUB_TOKEN }}"
        target_url: https://preview.iiif.io/training/${BRANCH_NAME}/index.html
        environment: staging

    # Deploy to 
    - name: Deploy to S3
      uses: jakejarvis/s3-sync-action@master
      with:
        args: --acl public-read 
      env:
        AWS_S3_BUCKET: "preview.iiif.io"
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_REGION: ${{ secrets.AWS_REGION }}
        SOURCE_DIR: "build/"
        DEST_DIR: "training/${BRANCH_NAME}"

    - name: Update deployment status (success)
      if: success()
      uses: chrnorm/deployment-status@releases/v1
      with:
          token: "${{ secrets.GITHUB_TOKEN }}"
          target_url: https://preview.iiif.io/training/${BRANCH_NAME}/index.html
          state: "success"
          deployment_id: ${{ steps.deployment.outputs.deployment_id }}

    - name: Update deployment status (failure)
      if: failure()
      uses: chrnorm/deployment-status@releases/v1
      with:
          token: "${{ secrets.GITHUB_TOKEN }}"
          target_url: https://preview.iiif.io/training/${BRANCH_NAME}/index.html
          state: "failure"
          deployment_id: ${{ steps.deployment.outputs.deployment_id }}



